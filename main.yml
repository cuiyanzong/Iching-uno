name: Build APK
on:
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
    - run: npm install
    - run: npm run build
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    - uses: android-actions/setup-android@v3
      with:
        api-level: 34
    - run: echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
    - name: Debug Android Setup
      run: |
        echo "=== Android Directory Check ==="
        ls -la android/
        echo "=== Gradle Wrapper Check ==="
        ls -la android/gradlew
        echo "=== Android App Directory ==="
        ls -la android/app/
        echo "=== Build Files Check ==="
        ls -la android/build.gradle android/app/build.gradle
        
    - name: Build APK with Debug Info
      run: |
        chmod +x android/gradlew
        cd android
        ./gradlew assembleRelease --info --stacktrace
        echo "=== Build completed, searching for APK files ==="
        find . -name "*.apk" -type f 2>/dev/null | head -20 || echo "No APK files found yet"
        
    - name: Find and List APK Files
      run: |
        echo "=== Searching for ALL APK files ==="
        find . -name "*.apk" -type f 2>/dev/null | head -20
        echo "=== Build output directory structure ==="
        find android -name "build" -type d | head -5
        find android -name "outputs" -type d | head -5
        echo "=== Gradle build directory check ==="
        ls -la android/app/build/ || echo "app/build not found"
        ls -la android/app/build/outputs/ || echo "outputs not found"
        ls -la android/app/build/outputs/apk/ || echo "apk dir not found"
        ls -la android/build/ || echo "root build not found"
        ls -la android/build/outputs/ || echo "root outputs not found"
        
    - name: Copy APK to Root and Upload
      run: |
        echo "=== Copying APK files to root directory ==="
        find android -name "*.apk" -type f 2>/dev/null | while read apk; do
          echo "Found APK: $apk"
          cp "$apk" "./$(basename "$apk")"
        done
        echo "=== APK files in root directory ==="
        ls -la *.apk 2>/dev/null || echo "No APK files copied to root"
        
    - name: Upload APK Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: |
          *.apk
          android/**/build/outputs/apk/**/*.apk
          android/app/build/outputs/apk/release/*.apk
          android/app/build/outputs/apk/debug/*.apk
          android/build/outputs/apk/**/*.apk
        if-no-files-found: warn
        
    - name: Find APK for Release
      id: find_apk
      run: |
        # First try to find APK in root directory
        APK_FILE=$(ls *.apk 2>/dev/null | head -1)
        if [ -n "$APK_FILE" ]; then
          echo "APK_PATH=$APK_FILE" >> $GITHUB_OUTPUT
          echo "Found APK in root: $APK_FILE"
        else
          # Fallback to searching in android directory
          APK_FILE=$(find android -name "*.apk" -type f 2>/dev/null | head -1)
          if [ -n "$APK_FILE" ]; then
            echo "APK_PATH=$APK_FILE" >> $GITHUB_OUTPUT
            echo "Found APK in android: $APK_FILE"
          else
            echo "No APK file found anywhere"
            exit 1
          fi
        fi
        
    - name: Create GitHub Release
      if: success()
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: "六十四卦UNO APK v${{ github.run_number }}"
        body: |
          🎮 **六十四卦UNO游戏 APK下载**
          
          ✅ 构建成功
          📱 支持Android设备
          🎯 完全离线单机游戏
          
          直接下载APK文件安装即可开始游戏！
        files: ${{ steps.find_apk.outputs.APK_PATH }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}